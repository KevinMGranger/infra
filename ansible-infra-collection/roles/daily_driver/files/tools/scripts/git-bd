#!/usr/bin/env fish

# TODO: wait do we actually need to save the branch name in the thing? no, right?
# well, that's for visibility on github. mayb need to keep it as a tree but should check that.
# still, no need for keeping the branch in the tree itself if it's implied by the name.
# TODO: actual error handling
function git-bd
    argparse h/help b/branch= -- $argv
    if set -q _flag_h
        echo "Sets a description for the current branch that is viewable in `git bl`."
        return 0
    end

    # TODO: validate branch existence
    if set -q _flag_b
        set branch $_flag_b
    else
        set branch (git symbolic-ref HEAD)
    end

    if not string match -q '*/*' $branch # short ref
        set branch (git show-ref --heads $branch | string split -f 2 ' ')
        set short_branch $branch
    else
        set short_branch (git rev-parse --abbrev-ref $branch)
    end

    set branch_obj_hash (echo "$branch" | git hash-object -w --stdin --no-filters)
    set desc_obj_hash (echo "$argv" | git hash-object -w --stdin --no-filters)

    set blob_mode 100400

    set tree_data (
        begin
            echo -e "$blob_mode blob $branch_obj_hash\tbranch";
            echo -e "$blob_mode blob $desc_obj_hash\tdescription"
        end | string collect
    )

    set tree_hash (echo "$tree_data" | git mktree)
    
    git update-ref refs/descriptions/$short_branch $tree_hash
end

git-bd $argv