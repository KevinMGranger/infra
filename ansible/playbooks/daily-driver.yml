- name: Set up most things
  hosts: daily_drivers
  vars:
    default_dir_perms: u=rwx,g=,o=
    default_file_perms: u=rw,g=,o=
    default_script_perms: u=rwx,g=,o=
    # python_packages:
    #   - requests
    #   - attrs
    #   - cryptography
    #   - hvac
    #   - click
    packages:
      - htop
      - fish
      - exa
      - bat
      - git
      - gh
      - httpie
      - podman
      - tmux
      - just
    packages_darwin:
      - rg
      - fd
      - nvim
      - mockoon
      - tokei
      - python@3.9
      - python@3.10
      - python@3.11
      - jq
      - tree
      - ansible
      - ansible-lint
      - moreutils
      - watch
      - node
      - golang
      - ascii
      - tokei
      - tailscale
      - vault
      - git-delta
    packages_redhat:
      - ripgrep
      - fd-find
      - neovim
      - python3.11
      - python3-hvac
    retired_packages_darwin:
      - dnsmasq
      - python@3.8
    retired_packages: []
    retired_packages_redhat: []
  tasks:
    - name: Remove old packages
      ansible.builtin.package:
        name: "{{ packages + vars['retired_packages_' + (ansible_os_family | lower)] }}"
        state: absent
      become: "{{ ansible_os_family != 'Darwin' }}"
      tags: [pkg]

    - name: Install packages
      ansible.builtin.package:
        name: "{{ packages + vars['packages_' + (ansible_os_family | lower)] }}"
      async: 300 # 5 minutes
      poll: 0
      register: pkg_install
      become: "{{ ansible_os_family != 'Darwin' }}"
      tags: [pkg]

    - name: Install rust(up) # noqa command-instead-of-module
      ansible.builtin.shell:
        cmd: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        creates: ~/.cargo/bin/rustup
      async: 120
      poll: 0
      register: rustup
      tags: [rust]

    - name: Handle dotfiles
      ansible.builtin.import_tasks: "../tasks/dotfiles.yml"
      tags: [dotfiles]

    - name: Handle scripts
      ansible.builtin.import_tasks: "../tasks/scripts.yml"
      tags: [scripts]

    - name: Wait for rust
      ansible.builtin.async_status:
        jid: "{{ rustup.ansible_job_id }}"
      register: rustup_result
      until: rustup_result.finished
      retries: 30
      delay: 5
      tags: [rust]

    - name: Install current-kube-context
      ansible.builtin.command:
        cmd: cargo install --git https://github.com/KevinMGranger/rukube/ current-kube-context
        creates: ~/.cargo/bin/current-kube-context
      async: 150
      poll: 0
      register: kube_ctx
      tags: [kube-ctx]
      when: "'kubernauts' in group_names"

    - name: Wait for packages to be installed
      ansible.builtin.async_status:
        jid: "{{ pkg_install.ansible_job_id }}"
      register: pkg_install_result
      until: pkg_install_result.finished
      retries: 30
      delay: 5
      become: "{{ ansible_os_family != 'Darwin' }}"
      tags: [fishy, pkg]

    - name: Set fish to default shell
      ansible.builtin.import_tasks: "../tasks/fish-as-default.yml"
      tags: [fishy]

    - name: Wait for kube-ctx
      ansible.builtin.async_status:
        jid: "{{ kube_ctx.ansible_job_id }}"
      register: kube_ctx_result
      until: kube_ctx_result.finished
      retries: 30
      delay: 5
      tags: [kube-ctx]
      when: "'kubernauts' in group_names"
